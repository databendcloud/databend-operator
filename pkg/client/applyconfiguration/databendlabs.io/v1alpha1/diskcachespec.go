/*
Copyright 2024.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	resource "k8s.io/apimachinery/pkg/api/resource"
)

// DiskCacheSpecApplyConfiguration represents a declarative configuration of the DiskCacheSpec type for use
// with apply.
type DiskCacheSpecApplyConfiguration struct {
	Enabled      *bool              `json:"enabled,omitempty"`
	MaxSize      *resource.Quantity `json:"size,omitempty"`
	Path         *string            `json:"path,omitempty"`
	StorageClass *string            `json:"storageClass,omitempty"`
}

// DiskCacheSpecApplyConfiguration constructs a declarative configuration of the DiskCacheSpec type for use with
// apply.
func DiskCacheSpec() *DiskCacheSpecApplyConfiguration {
	return &DiskCacheSpecApplyConfiguration{}
}

// WithEnabled sets the Enabled field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Enabled field is set to the value of the last call.
func (b *DiskCacheSpecApplyConfiguration) WithEnabled(value bool) *DiskCacheSpecApplyConfiguration {
	b.Enabled = &value
	return b
}

// WithMaxSize sets the MaxSize field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MaxSize field is set to the value of the last call.
func (b *DiskCacheSpecApplyConfiguration) WithMaxSize(value resource.Quantity) *DiskCacheSpecApplyConfiguration {
	b.MaxSize = &value
	return b
}

// WithPath sets the Path field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Path field is set to the value of the last call.
func (b *DiskCacheSpecApplyConfiguration) WithPath(value string) *DiskCacheSpecApplyConfiguration {
	b.Path = &value
	return b
}

// WithStorageClass sets the StorageClass field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the StorageClass field is set to the value of the last call.
func (b *DiskCacheSpecApplyConfiguration) WithStorageClass(value string) *DiskCacheSpecApplyConfiguration {
	b.StorageClass = &value
	return b
}
